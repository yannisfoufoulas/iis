<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>eu.dnetlib.iis</groupId>
        <artifactId>iis-wf</artifactId>
        <version>1.2.0-SNAPSHOT</version>
    </parent>

    <artifactId>iis-wf-citationmatching</artifactId>
    <packaging>jar</packaging>

    <dependencies>
        <dependency>
            <groupId>eu.dnetlib.iis</groupId>
            <artifactId>iis-common</artifactId>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <!-- conflicting scala binary versions -->
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                </exclusion>
                <exclusion>
                    <!-- conflicting scala binary versions -->
                    <groupId>org.apache.spark</groupId>
                    <artifactId>spark-core_2.12</artifactId>
                </exclusion>
                <exclusion>
                    <!-- conflicting scala binary versions -->
                    <groupId>org.apache.spark</groupId>
                    <artifactId>spark-sql_2.12</artifactId>
                </exclusion>
                <exclusion>
                    <!-- conflicting scala binary versions -->
                    <groupId>pl.edu.icm.spark-utils</groupId>
                    <artifactId>spark-utils_2.12</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>eu.dnetlib.iis</groupId>
            <artifactId>iis-3rdparty-avrojsoncoders</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>eu.dnetlib.iis</groupId>
            <artifactId>iis-common</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <!-- conflicting scala binary versions -->
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                </exclusion>
                <exclusion>
                    <!-- conflicting scala binary versions -->
                    <groupId>org.apache.spark</groupId>
                    <artifactId>spark-core_2.12</artifactId>
                </exclusion>
                <exclusion>
                    <!-- conflicting scala binary versions -->
                    <groupId>org.apache.spark</groupId>
                    <artifactId>spark-sql_2.12</artifactId>
                </exclusion>
                <exclusion>
                    <!-- conflicting scala binary versions -->
                    <groupId>pl.edu.icm.spark-utils</groupId>
                    <artifactId>spark-utils_2.12</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>eu.dnetlib.iis</groupId>
            <artifactId>iis-schemas</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- Needed by Avro { -->
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro-mapred</artifactId>
            <classifier>hadoop2</classifier>
        </dependency>

        <!-- It seems that this dependency is needed, if it is not here,
        running Oozie tests of Avro-based map-reduce ends up with
        "java.lang.NoClassDefFoundError" exception and statement that
        "Paranamer" class is missing.-->
        <dependency>
            <groupId>com.thoughtworks.paranamer</groupId>
            <artifactId>paranamer</artifactId>
        </dependency>
        <!-- Needed by Avro } -->

        <dependency>
            <groupId>pl.edu.icm.coansys</groupId>
            <artifactId>models</artifactId>
        </dependency>

        <dependency>
            <groupId>pl.edu.icm.coansys</groupId>
            <artifactId>citation-matching-core-code</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-mapreduce-client-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-common</artifactId>
        </dependency>

        <!-- Needed to run Pig jobs { -->
        <dependency>
            <groupId>org.apache.pig</groupId>
            <artifactId>pig</artifactId>
            <!-- this lib cannot be set to provided -->
        </dependency>

        <dependency>
            <groupId>com.linkedin.datafu</groupId>
            <artifactId>datafu</artifactId>
        </dependency>
        <!-- Needed to run Pig jobs } -->

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_2.10</artifactId>
            <version>${spark.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_2.10</artifactId>
            <version>${spark.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>pl.edu.icm.spark-utils</groupId>
            <artifactId>spark-utils_2.10</artifactId>
            <version>1.0.1</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <properties>
        <spark.version>1.6.0-cdh5.16.2</spark.version>
    </properties>

</project>
